// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	json "encoding/json"

	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DseDatacenter) DeepCopyInto(out *DseDatacenter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DseDatacenter.
func (in *DseDatacenter) DeepCopy() *DseDatacenter {
	if in == nil {
		return nil
	}
	out := new(DseDatacenter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DseDatacenter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DseDatacenterList) DeepCopyInto(out *DseDatacenterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DseDatacenter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DseDatacenterList.
func (in *DseDatacenterList) DeepCopy() *DseDatacenterList {
	if in == nil {
		return nil
	}
	out := new(DseDatacenterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DseDatacenterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DseDatacenterSpec) DeepCopyInto(out *DseDatacenterSpec) {
	*out = *in
	if in.Config != nil {
		in, out := &in.Config, &out.Config
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.Racks != nil {
		in, out := &in.Racks, &out.Racks
		*out = make([]DseRack, len(*in))
		copy(*out, *in)
	}
	if in.StorageClaim != nil {
		in, out := &in.StorageClaim, &out.StorageClaim
		*out = new(DseStorageClaim)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DseDatacenterSpec.
func (in *DseDatacenterSpec) DeepCopy() *DseDatacenterSpec {
	if in == nil {
		return nil
	}
	out := new(DseDatacenterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DseDatacenterStatus) DeepCopyInto(out *DseDatacenterStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DseDatacenterStatus.
func (in *DseDatacenterStatus) DeepCopy() *DseDatacenterStatus {
	if in == nil {
		return nil
	}
	out := new(DseDatacenterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DseRack) DeepCopyInto(out *DseRack) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DseRack.
func (in *DseRack) DeepCopy() *DseRack {
	if in == nil {
		return nil
	}
	out := new(DseRack)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DseStorageClaim) DeepCopyInto(out *DseStorageClaim) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DseStorageClaim.
func (in *DseStorageClaim) DeepCopy() *DseStorageClaim {
	if in == nil {
		return nil
	}
	out := new(DseStorageClaim)
	in.DeepCopyInto(out)
	return out
}
